package com.saeyan.boardDAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.saeyan.boardDTO.boardDTO;
import com.saeyan.dao.MemberDAO;

public class boardDAO {

	private static boardDAO instance = new boardDAO();
	private Connection con = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	private boardDAO() {
	}
	public static boardDAO getInstance() {
		return instance;
	}
	public Connection getConnection() throws Exception {
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String user = "ezen";
		String password = "1234";
		//1.드라이버로드
		Class.forName("oracle.jdbc.driver.OracleDriver");
		//2.DB연결
		return DriverManager.getConnection(url,user,password);
	}
	// num의 최대값 구하기
	public int getMaxNum() {
		int maxNum = 0;
		
		PreparedStatement pstmt = null;
		ResultSet set = null;
		String sql;
		
		try {
			sql = "select nvl(max(num),0) from board";
			//구문전송
			pstmt = con.prepareStatement(sql);
			
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				maxNum = rs.getInt(1);
			}
			rs.close();
			pstmt.close();
		}catch(Exception e) {
			e.printStackTrace();
		}
		return maxNum;
	}
	// 입력(insert) - 넘어오는 데이터는 BoardDTO의 dto
		public int insertData(boardDTO dto) {
			int result = 0;
			
			PreparedStatement pstmt = null;
			String sql;
			try {
			
				sql = "insert into board (num,name,pwd,email,subject,";
				sql += "content,ipAddr,hitCount,created) ";
		        sql += "values (?,?,?,?,?,?,?,0,sysdate)";
				
		        pstmt = con.prepareStatement(sql); 
		        
		        pstmt.setInt(1,dto.getNum());
		        pstmt.setString(1,dto.getName());
		        pstmt.setString(1,dto.getPwd());
		        pstmt.setString(1,dto.getEmail());
		        pstmt.setString(1,dto.getSubject());
		        pstmt.setString(1,dto.getContent());
		        pstmt.setString(1,dto.getIpaddr());
			
		        result = pstmt.executeUpdate();
		        pstmt.close();
			
			}catch(Exception e) {
				e.printStackTrace();
			}
			return result; // result로 반환
		}
		//전체 데이터 갯수 구하기
		public int getDataCount(String searchKey, String searchValue) {
			int totalcount = 0;
			
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			String sql;
			
			try {
				searchValue = "%" + searchValue + "%";
				
				sql = "select nvl(count(*),0) from board ";
				sql += "where" + searchKey + "like";
				//구문전송
				pstmt = con.prepareStatement(sql);
			
				pstmt.setString(1,searchValue);
				
				rs = pstmt.executeQuery();
				
				if(rs.next()) {
					totalcount = rs.getInt(1);
				}
				rs.close();
				pstmt.close();
			}catch(Exception e) {
				e.printStackTrace();
			}
			return totalcount;
		}
		
		//전체 데이터 출력(페이지마다 개수 제한)
		public List<boardDTO> getLists(int start, int end , String searchKey, String searchValue){
			
			List<boardDTO> lists = new ArrayList<boardDTO>();
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			String sql;
			
			try {
				searchValue = "%" + searchValue + "%";
				sql = "select * from (";
				sql+= "select rownum rnum, data.* from (";
				sql+= "select num,name,subject,hitcount,";
				sql+= "to_char(created,'YYYY-MM-DD') created";
				sql+= "from board where " + searchKey + "like ?";
				sql+= "order by num desc) data) ";
				sql+= "where rnum>=? and rnum <=?";
				
				pstmt = con.prepareStatement(sql);
				
				pstmt.setString(1,searchValue);
				pstmt.setInt(2,start);
				pstmt.setInt(3,end);
				
				rs = pstmt.executeQuery();
			}
			
		}
		
}
