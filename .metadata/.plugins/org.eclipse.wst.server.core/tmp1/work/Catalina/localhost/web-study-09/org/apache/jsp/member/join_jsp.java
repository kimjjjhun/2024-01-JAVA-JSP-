/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-03-15 05:55:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"join.css?after\"/>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"script/member.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"join.do\" method=\"post\" name=\"frm\" class=\"joinForm\">\r\n");
      out.write("			 <div class=\"textForm\">\r\n");
      out.write("				<input type=\"text\" name=\"name\" class=\"name\" placeholder=\"이름입력\">\r\n");
      out.write("				<select name=\"gender\" style=\"float:left;\">\r\n");
      out.write("    			<option value=\"\">성별 선택</option>\r\n");
      out.write("    			<option value=\"남\">남</option>\r\n");
      out.write("    			<option value=\"여\">여</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"text\" name=\"nickname\" class=\"nickname\" placeholder=\"닉네임입력\">\r\n");
      out.write("			</div>\r\n");
      out.write("				\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				<input type=\"text\" name=\"userid\" id=\"userid\" class=\"id\" placeholder=\"아이디입력\">\r\n");
      out.write("				<input type=\"button\" value=\"중복 체크\" onclick=\"idCheck()\" class=\"checkbtn\">\r\n");
      out.write("				<input type=\"hidden\" name=\"reid\"> \r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"password\" name=\"pwd\" class=\"pw\" placeholder=\"비밀번호입력\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"password\" name=\"pwd_check\" class=\"pw\" placeholder=\"비밀번호재입력\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"text\" name=\"email\" class=\"email\" placeholder=\"이메일입력\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				<input type=\"text\" name=\"cellPhone\" id=\"cellPhone\" \r\n");
      out.write("				placeholder=\"핸드폰번호 입력 예)010-0000-0000\" maxlength=\"13\" class=\"cellphoneNo\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\" hidden=\"Lev\">\r\n");
      out.write("				<p style=\"float: left\">권한\r\n");
      out.write("				<input type=\"radio\" name=\"admin\" value=\"0\" checked=\"checked\"> 일반회원 \r\n");
      out.write("				<input type=\"radio\" name=\"admin\" value=\"1\"> 관리자</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"textForm\">\r\n");
      out.write("				<input type=\"submit\" class=\"btn\" value=\"S I G N U P\" onclick=\"return joinCheck()\">\r\n");
      out.write("			</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("// 전화번호 입력시 자동 (-)하이픈 처리 스크립트\r\n");
      out.write("function autoHypenPhone(str){\r\n");
      out.write("    str = str.replace(/[^0-9]/g, '');\r\n");
      out.write("    var tmp = '';\r\n");
      out.write("    if( str.length < 4){\r\n");
      out.write("        return str;\r\n");
      out.write("    }else if(str.length < 7){\r\n");
      out.write("        tmp += str.substr(0, 3);\r\n");
      out.write("        tmp += '-';\r\n");
      out.write("        tmp += str.substr(3);\r\n");
      out.write("        return tmp;\r\n");
      out.write("    }else if(str.length < 11){\r\n");
      out.write("        tmp += str.substr(0, 3);\r\n");
      out.write("        tmp += '-';\r\n");
      out.write("        tmp += str.substr(3, 3);\r\n");
      out.write("        tmp += '-';\r\n");
      out.write("        tmp += str.substr(6);\r\n");
      out.write("        return tmp;\r\n");
      out.write("    }else{              \r\n");
      out.write("        tmp += str.substr(0, 3);\r\n");
      out.write("        tmp += '-';\r\n");
      out.write("        tmp += str.substr(3, 4);\r\n");
      out.write("        tmp += '-';\r\n");
      out.write("        tmp += str.substr(7);\r\n");
      out.write("        return tmp;\r\n");
      out.write("    }\r\n");
      out.write("    return str;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var cellPhone = document.getElementById('cellPhone');\r\n");
      out.write("cellPhone.onkeyup = function(event){\r\n");
      out.write("event = event || window.event;\r\n");
      out.write("var _val = this.value.trim();\r\n");
      out.write("this.value = autoHypenPhone(_val) ;\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
